{"version":3,"sources":["Reducers/todoReducer.js","hooks/useForm.js","components/Form.js","components/TodoListItem.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["todoReducer","state","action","type","payload","map","todo","id","done","filter","useForm","initialState","useState","setState","handleInputChange","target","name","value","handleInputReset","Form","handleAddTodo","description","onSubmit","e","preventDefault","trim","newTodo","Date","getTime","desc","className","placeholder","autoComplete","onChange","TodoListItem","index","handleToggle","handleDelete","onClick","TodoList","todos","init","JSON","parse","localStorage","getItem","App","useReducer","dispatch","useEffect","setItem","stringify","length","idTodo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.151b578e.chunk.js","sourcesContent":["\r\nexport const todoReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'add':\r\n            return [...state, action.payload];\r\n\r\n        case 'toggle':\r\n            return state.map(todo => (todo.id === action.payload) ? { ...todo, done: !todo.done } : todo);\r\n\r\n        case 'delete':\r\n            return state.filter(todo => todo.id !== action.payload);\r\n\r\n        default:\r\n            return state;\r\n    };\r\n};","import { useState } from 'react'\r\n\r\nconst useForm = (initialState = {}) => {\r\n\r\n    const [state, setState] = useState(initialState);\r\n\r\n    const handleInputChange = ({ target }) => setState({ ...state, [target.name]: target.value });\r\n\r\n    const handleInputReset = () => setState(initialState);\r\n\r\n    return [state, handleInputChange, handleInputReset];\r\n}\r\n\r\nexport default useForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport useForm from '../hooks/useForm';\r\n\r\nconst Form = ({ handleAddTodo }) => {\r\n\r\n    const [{ description }, handleInputChange, handleInputReset] = useForm({ description: '' });\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (!description.trim()) return;\r\n\r\n        const newTodo = {\r\n            id: new Date().getTime(),\r\n            desc: description.trim(),\r\n            done: false\r\n        }\r\n\r\n        handleAddTodo(newTodo);\r\n\r\n        handleInputReset();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h4>Agregar TODO</h4>\r\n\r\n            <hr />\r\n\r\n            <form\r\n                onSubmit={handleSubmit}\r\n            >\r\n\r\n                <input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    name=\"description\"\r\n                    placeholder=\"Aprender...\"\r\n                    autoComplete=\"off\"\r\n                    value={description}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    className=\"btn btn-outline-primary btn-block mt-1\"\r\n                    type=\"submit\"\r\n                >\r\n                    Agregar\r\n                </button>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nForm.propTypes = {\r\n    handleAddTodo: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Form;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TodoListItem = ({ todo: { id, desc, done }, index, handleToggle, handleDelete }) => (\r\n    <li className=\"list-group-item\">\r\n        <p\r\n            className={`${done && 'complete'}`}\r\n            onClick={() => handleToggle(id)}\r\n        >\r\n            {index + 1}. {desc}\r\n        </p>\r\n\r\n        <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => handleDelete(id)}\r\n        >\r\n            Borrar\r\n        </button>\r\n    </li>\r\n);\r\n\r\nTodoListItem.propTypes = {\r\n    todo: PropTypes.object.isRequired,\r\n    index: PropTypes.number.isRequired,\r\n    handleToggle: PropTypes.func.isRequired,\r\n    handleDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TodoListItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TodoListItem from './TodoListItem';\r\n\r\nconst TodoList = ({ todos, handleToggle, handleDelete }) => (\r\n    <ul className=\"list-group list-group-flush\">\r\n        {\r\n            todos.map((todo, index) => (\r\n                <TodoListItem\r\n                    key={todo.id}\r\n                    todo={todo}\r\n                    index={index}\r\n                    handleToggle={handleToggle}\r\n                    handleDelete={handleDelete}\r\n                />\r\n            ))\r\n        }\r\n    </ul>\r\n);\r\n\r\nTodoList.propTypes = {\r\n    todos: PropTypes.array.isRequired,\r\n    handleToggle: PropTypes.func.isRequired,\r\n    handleDelete: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TodoList;","import React, { useEffect, useReducer } from 'react';\n\nimport { todoReducer } from './Reducers/todoReducer';\n\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\n\nconst init = () => JSON.parse(localStorage.getItem('todos')) || [];\n\nfunction App() {\n\n\tconst [todos, dispatch] = useReducer(todoReducer, [], init)\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem('todos', JSON.stringify(todos));\n\t}, [todos]);\n\n\tconst handleAddTodo = newTodo => dispatch({\n\t\ttype: 'add',\n\t\tpayload: newTodo\n\t});\n\n\tconst handleToggle = idTodo => dispatch({\n\t\ttype: 'toggle',\n\t\tpayload: idTodo\n\t});\n\n\tconst handleDelete = idTodo => dispatch({\n\t\ttype: 'delete',\n\t\tpayload: idTodo\n\t});\n\n\treturn (\n\t\t<>\n\t\t\t<h1>Todo App ( {todos.length} )</h1>\n\n\t\t\t<hr />\n\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-md-5 mb-5 mb-md-0\">\n\t\t\t\t\t<Form\n\t\t\t\t\t\thandleAddTodo={handleAddTodo}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"col-md-7 mt-5 mt-md-0\">\n\t\t\t\t\t<TodoList\n\t\t\t\t\t\ttodos={todos}\n\t\t\t\t\t\thandleToggle={handleToggle}\n\t\t\t\t\t\thandleDelete={handleDelete}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}